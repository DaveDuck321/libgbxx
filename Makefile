BUILD_DIR := build
LIBGB_BUILD_DIR := $(BUILD_DIR)/libgb
TETRIS_BUILD_DIR := $(BUILD_DIR)/tetris
DR_MARIO_BUILD_DIR := $(BUILD_DIR)/dr_mario
TEST_BUILD_DIR := $(BUILD_DIR)/tests

CXX_OPTIONS := -Oz -MMD -MP -std=c++26 -Wall -Wpedantic -Werror -Wextra -Wno-variadic-macros
CXX_OPTIONS += -Ilibgb/include
ASM_OPTIONS :=

CXX := $(GB_TOOLCHAIN)/clang++ --target=gb-unknown-unknown
OBJ_COPY := $(GB_TOOLCHAIN)/llvm-objcopy

AUTO_GENERATE_DIR := libgb/include/libgb/arch/generated
AUTO_GENERATE_SCRIPT := register_gen/generate_hpp.py
AUTO_GENERATE := python $(AUTO_GENERATE_SCRIPT)

AUTOGENERATED_HEADERS = \
	$(AUTO_GENERATE_DIR)/enums.hpp \
	$(AUTO_GENERATE_DIR)/accessors.hpp \

LIBGB_OBJECTS = \
	$(LIBGB_BUILD_DIR)/dma_handler.o \
	$(LIBGB_BUILD_DIR)/format.o \
	$(LIBGB_BUILD_DIR)/int_handlers.o \
	$(LIBGB_BUILD_DIR)/interrupts.o \
	$(LIBGB_BUILD_DIR)/memcpy.o \
	$(LIBGB_BUILD_DIR)/meta.o \
	$(LIBGB_BUILD_DIR)/random.o \
	$(LIBGB_BUILD_DIR)/runtime.o \
	$(LIBGB_BUILD_DIR)/serial.o \

LIBGB_DEPS = $(LIBGB_OBJECTS:.o=.d)

TETRIS_OBJECTS = \
	$(TETRIS_BUILD_DIR)/tetris.o \
	$(TETRIS_BUILD_DIR)/copy_grid_into_vram.o \

TETRIS_DEPS = $(TETRIS_OBJECTS:.o=.d)

DR_MARIO_OBJECTS = \
	$(DR_MARIO_BUILD_DIR)/dr_mario.o \
	$(DR_MARIO_BUILD_DIR)/copy_grid_into_vram.o \

DR_MARIO_DEPS = $(DR_MARIO_OBJECTS:.o=.d)

TEST_OBJECTS = \
	$(TEST_BUILD_DIR)/memcpy.o \
	$(TEST_BUILD_DIR)/print.o \
	$(TEST_BUILD_DIR)/tile_allocation.o \
	$(TEST_BUILD_DIR)/vram_guard.o \

TEST_ROMS = $(TEST_OBJECTS:.o=.gb)
TEST_ELFS = $(TEST_OBJECTS:.o=.out)
TEST_DEPS = $(TEST_OBJECTS:.o=.d)

.PHONY: default
default: $(AUTOGENERATED_HEADERS) tetris.gb dr_mario.gb $(TEST_ROMS)

.PHONY: clean
clean:
	rm -r $(BUILD_DIR)
	rm $(AUTOGENERATED_HEADERS)

$(LIBGB_BUILD_DIR) $(TETRIS_BUILD_DIR) $(DR_MARIO_BUILD_DIR) $(TEST_BUILD_DIR):
	mkdir -p $@

-include $(LIBGB_DEPS)
$(AUTO_GENERATE_DIR)/enums.hpp: register_gen/registers.json $(AUTO_GENERATE_SCRIPT)
	$(AUTO_GENERATE) $< -o $@ --type enum

$(AUTO_GENERATE_DIR)/accessors.hpp: register_gen/registers.json $(AUTO_GENERATE_SCRIPT)
	$(AUTO_GENERATE) $< -o $@ --type accessors

# TODO: compile this as part of the toolchain
$(LIBGB_BUILD_DIR)/runtime.o: $(GB_TOOLCHAIN)/../../gameboy-tooling/runtime.S
	$(CXX) -c $< -o $@

$(LIBGB_BUILD_DIR)/%.o: libgb/%.cpp $(AUTOGENERATED_HEADERS) | $(LIBGB_BUILD_DIR)
	$(CXX) $(CXX_OPTIONS) -fdata-sections -c $< -o $@

$(LIBGB_BUILD_DIR)/%.o: libgb/%.S $(AUTOGENERATED_HEADERS) | $(LIBGB_BUILD_DIR)
	$(CXX) $(ASM_OPTIONS) -c $< -o $@

-include $(TETRIS_DEPS)
$(TETRIS_BUILD_DIR)/%.o: tetris/%.cpp $(AUTOGENERATED_HEADERS) | $(TETRIS_BUILD_DIR)
	$(CXX) $(CXX_OPTIONS) -c $< -o $@

$(TETRIS_BUILD_DIR)/%.o: tetris/%.S $(AUTOGENERATED_HEADERS) | $(TETRIS_BUILD_DIR)
	$(CXX) $(ASM_OPTIONS) -c $< -o $@

$(TETRIS_BUILD_DIR)/tetris.out: $(TETRIS_OBJECTS) $(LIBGB_OBJECTS) | $(TETRIS_BUILD_DIR)
	$(CXX) $^ -o $@

tetris.gb: $(TETRIS_BUILD_DIR)/tetris.out
	$(OBJ_COPY) -O binary $< $@ --gap-fill 0

-include $(DR_MARIO_DEPS)
$(DR_MARIO_BUILD_DIR)/%.o: dr_mario/%.cpp $(AUTOGENERATED_HEADERS) | $(DR_MARIO_BUILD_DIR)
	$(CXX) $(CXX_OPTIONS) -c $< -o $@

$(DR_MARIO_BUILD_DIR)/%.o: dr_mario/%.S $(AUTOGENERATED_HEADERS) | $(DR_MARIO_BUILD_DIR)
	$(CXX) $(ASM_OPTIONS) -c $< -o $@

$(DR_MARIO_BUILD_DIR)/dr_mario.out: $(DR_MARIO_OBJECTS) $(LIBGB_OBJECTS) | $(DR_MARIO_BUILD_DIR)
	$(CXX) $^ -o $@

dr_mario.gb: $(DR_MARIO_BUILD_DIR)/dr_mario.out
	$(OBJ_COPY) -O binary $< $@ --gap-fill 0

-include $(TEST_DEPS)
.PRECIOUS: $(TEST_ELFS)
$(TEST_BUILD_DIR)/%.o: tests/libgb/%.cpp $(AUTOGENERATED_HEADERS) | $(TEST_BUILD_DIR)
	$(CXX) $(CXX_OPTIONS) -c $< -o $@

$(TEST_BUILD_DIR)/%.out: $(TEST_BUILD_DIR)/%.o $(LIBGB_OBJECTS) | $(TEST_BUILD_DIR)
	$(CXX) $^ -o $@

$(TEST_BUILD_DIR)/%.gb: $(TEST_BUILD_DIR)/%.out | $(TEST_BUILD_DIR)
	$(OBJ_COPY) -O binary $< $@ --gap-fill 0
